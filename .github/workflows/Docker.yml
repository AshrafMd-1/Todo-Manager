name: Docker CI/CD

on: [push]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    container:
      image: todo-app:development
      env:
        DEV_USERNAME: ${{ secrets.DB_USER }}
        DEV_DATABASE: ${{ secrets.DEV_DATABASE }}
        DEV_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DEV_DATABASE }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker-compose build

      - name: Run Docker Compose
        run: docker-compose up -d

      - name: Run unit tests
        run: docker-compose exec app npm test

      - name: Run integration tests
        run: docker-compose exec app npm install cypress cypress-json-results && docker-compose exec app npx cypress run

      - name: Notify on success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"✨ Great News! The Docker CI & CD workflow completed successfully! All tests passed smoothly. :tada:"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"⚠️ Uh-oh! The Docker CI & CD workflow encountered issues and failed. Immediate attention is needed. :warning:"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Stop and remove Docker containers
        run: docker-compose down
